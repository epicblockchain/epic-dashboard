image: node:16

stages:
    - build
    - release

.build_base:
    stage: build
    rules:
        - if: $CI_COMMIT_TAG
    before_script:
        - dpkg --add-architecture i386
        - apt update
        - npm install
        - apt install -y wine64 fakeroot mono-devel zip rpm wine32

build:win64:
    extends: .build_base
    script:
        - make win64
        - mv out/make/squirrel.windows/x64/*.exe ./epic-dashboard-$CI_COMMIT_TAG-Setup-x64.exe
    artifacts:
        reports:
            dotenv: variables.env
        name: epic-dashboard-win64-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA
        paths:
            - '*.exe'
        expire_in: 1 week

build:win32:
    extends: .build_base
    script:
        - make win32
        - mv out/make/squirrel.windows/ia32/*.exe ./epic-dashboard-$CI_COMMIT_TAG-Setup-ia32.exe
    artifacts:
        name: epic-dashboard-win32-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA
        paths:
            - '*.exe'
        expire_in: 1 week

build:deb64:
    extends: .build_base
    script:
        - make deb64
        - mv out/make/deb/x64/*.deb ./epic-dashboard-$CI_COMMIT_TAG-x64.deb
    artifacts:
        name: epic-dashboard-deb64-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA
        paths:
            - '*.deb'
        expire_in: 1 week

build:debarmhf:
    extends: .build_base
    script:
        - make debarmhf
        - mv out/make/deb/armv7l/*.deb ./epic-dashboard-$CI_COMMIT_TAG-armhf.deb
    artifacts:
        name: epic-dashboard-debarmhf-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA
        paths:
            - '*.deb'
        expire_in: 1 week

build:debarm64:
    extends: .build_base
    script:
        - make debarm64
        - mv out/make/deb/arm64/*.deb ./epic-dashboard-$CI_COMMIT_TAG-arm64.deb
    artifacts:
        name: epic-dashboard-debarm64-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA
        paths:
            - '*.deb'
        expire_in: 1 week

build:rpm64:
    extends: .build_base
    script:
        - make rpm64
        - mv out/make/rpm/x64/*.rpm ./epic-dashboard-$CI_COMMIT_TAG-x64.rpm
    artifacts:
        name: epic-dashboard-rpm64-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA
        paths:
            - '*.rpm'
        expire_in: 1 week

build:mac:
    extends: .build_base
    script:
        - make mac
        - mv out/make/zip/darwin/x64/*.zip ./epic-dashboard-mac-$CI_COMMIT_TAG-x64.zip
        - mv out/make/zip/darwin/arm64/*.zip ./epic-dashboard-mac-$CI_COMMIT_TAG-ARM64.zip
    artifacts:
        name: epic-dashboard-mac-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA
        paths:
            - '*.zip'
        expire_in: 1 week

release:
    stage: release
    rules:
        - if: $CI_COMMIT_TAG && ($CI_COMMIT_MESSAGE =~ /Release public version /)
    variables:
        GIT_STRATEGY: clone
    before_script:
        - apt update
        - apt install -y git openssh-client curl gpg
        - curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
        - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        - apt update
        - apt install -y gh
        - eval `ssh-agent -s`
        - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts
    script:
        - git checkout master
        - git remote add github git@github.com:epicblockchain/epic-dashboard.git
        - git push -f github master
        - gh release create v$CI_COMMIT_TAG -F changelog.md
        - gh release upload v$CI_COMMIT_TAG "epic-dashboard-$CI_COMMIT_TAG-Setup-x64.exe#Windows 64-bit"
        - gh release upload v$CI_COMMIT_TAG "epic-dashboard-$CI_COMMIT_TAG-Setup-ia32.exe#Windows 32-bit"
        - gh release upload v$CI_COMMIT_TAG "epic-dashboard-$CI_COMMIT_TAG-x64.deb#Debian, Ubuntu 64-bit"
        - gh release upload v$CI_COMMIT_TAG "epic-dashboard-$CI_COMMIT_TAG-armhf.deb#Debian, Ubuntu ARMhf"
        - gh release upload v$CI_COMMIT_TAG "epic-dashboard-$CI_COMMIT_TAG-arm64.deb#Debian, Ubuntu ARM64"
        - gh release upload v$CI_COMMIT_TAG "epic-dashboard-$CI_COMMIT_TAG-x64.rpm#Red Hat, Fedora 64-bit"
        - gh release upload v$CI_COMMIT_TAG "epic-dashboard-mac-$CI_COMMIT_TAG-x64.zip#macOS 64-bit"
